Técnicas de modelagens de software:

-Caixa branca ou White box testing:está testando a codificação interna e infra-estrutura de uma solução de software. Consiste principalmente no fortalecimento do fluxo de entradas e saídas através da aplicação e a melhoria do design e usabilidade. O teste de caixa branca também é conhecido como teste Clear Box, teste Open Box, teste estrutural, teste baseado em código e teste de caixa de vidro.Vantagens:Otimizar códigos ao encontrar erros que são ocultos,pode automatizar os casos de teste para caiza branca,um dos testes mais completos pois verificam todos os caminhos dos códigos,vantagem de poder começar antes mesmo que algumas ferramentas não estejam concluídas.

-Caixa preta ou Black box testing:O oposto do teste de caixa branca é teste de caixa preta. Isso está sendo testado de uma perspectiva externa ou do usuário final. O teste do Whitebox, por outro lado, é baseado na operação interna de um aplicativo e é sobre testes internos.O termo “whitebox” é usado por causa do conceito da caixa transparente. O nome Caixa branca simboliza a capacidade de percorrer a camada externa do software (ou “quadro”) em relação à operação interna. Da mesma forma, o nome ‘black box’ em ‘Black Box Testing’ simboliza que não podemos ver o funcionamento interno do software. Portanto, só podemos testar a experiência do usuário final.

-Caixa cinza ou Gray box:O teste da caixa cinza é quando o testador tem um entendimento parcial da estrutura interna do sistema em teste. O teste de caixa cinza é um processo para depurar aplicativos de software,fazendo uma entrada pelo front-end e verificando os dados no back-end.Vntagens:O teste da caixa cinza é feito do ponto de vista do usuário final e não da perspectiva do designer ou do engenheiro,oferece os benefícios dos testes de caixa preta e caixa branca juntos.Serão baseadas em especificações funcionais, histórias de usuário e diagramas de arquitetura, permitindo a verificação dos requisitos originais.Os testes serão imparciais, pois haverá mais discussões entre os pensamentos dos testadores de software e os pensamentos do designer ou engenheiro.
